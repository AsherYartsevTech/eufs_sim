<?xml version="1.0"?>
<launch>
  
  <node pkg="rosbag" type="play" name="player_eth" output="screen" args="--clock /home/ignat/EUFSA/datasets/2017-05-10-13-14-16.public-release.bag">
    <remap from="velodyne_points" to="velodyne_points_2"/>
  </node>

  <!-- roslaunch arguments -->
<!--   <env name="GAZEBO_MODEL_PATH" value="$(find eufsa_description)"/>
  <env name="GAZEBO_RESOURCE_PATH" value="$(find eufsa_description)"/>
  <arg name="namespace" default="eufsa"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="false"/>
  <arg name="cmd_timeout" default="0.5"/> -->
  <arg name="show_rviz" default="false" />

<!--   <node pkg="rosbag" type="play" name="player" output="screen" args="-clock /home/ignat/EUFSA/datasets/2017-05-10-13-14-16.public-release.bag">
    <remap from="velodyne_points" to="velodyne_points_2"/>
  </node> -->
  
  <!-- Vehicle pose -->
  <arg name="x" default="-53.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.1"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>
  
  <!-- eufsa_control launch file -->
  <include file="$(find eufsa_gazebo)/launch/eufsa_control.launch"/>

  <!-- Gazebo -->
<!--   <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find eufsa_gazebo)/worlds/acceleration.world"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="true"/>
  </include> -->

  <!-- Load the URDF into the ROS Parameter Server -->
  <param command="$(find xacro)/xacro '$(find eufsa_description)/robots/eufsa.urdf.xacro' --inorder" name="robot_description"/>

  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
  <node args="-urdf -model eufsa -param robot_description 
    -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)" 
    name="urdf_spawner" output="screen" pkg="gazebo_ros" respawn="false" type="spawn_model"/>
  
  <!-- start robot_control node -->
<!--   <include file="$(find eufsa_robot_control)/launch/eufsa_robot_control.launch">
    <arg name="publish_tf" default="true"/>
  </include> -->

  <include file="$(find eufsa_control)/launch/ackermann_mux.launch"/>
<!-- xbox controller -->
<!--   <include file="$(find eufsa_control)/launch/joy_ps4.launch"/> -->
<!--   <include file="$(find wheel_odometry)/launch/wheel_odometry.launch"/> -->



<!-- State Estimator GPS IMU WOdom -->
  <include file="$(find state_estimator)/launch/state_estimator.launch" />
  <node pkg="state_estimator" name="state_estimator_tf_pub" type="tf_pub.py"/>

  <node pkg="tf" type="static_transform_publisher" name="map_broadcaster" args="0 0 0 0 0 0 1 map odom 100" />

<!--   <include file="$(find state_estimator)/launch/fusion.launch" /> -->
  <!-- <node pkg = "state_estimator" type = "tf_pub.py" name = "world_to_imu_odom" output = "screen"/> -->

<!-- launch cone extraction -->
<!-- <node pkg="cone_planner" name="cone_extractor" type="cone_extractor" /> -->

<!-- launch boundary extraction -->
<!-- <node pkg="cone_planner" name="cone_boundary" type="cone_boundary" /> -->

<!-- Lidar Buffer -->
  <include file="$(find cone_planner)/launch/buff.launch" />

  <include file="$(find cone_planner)/launch/plc2_to_scan.launch" />

  <include file="$(find cone_planner)/launch/cone_boundary.launch" />

  <node pkg="laser_assembler" name="lidar_buffer_pub" type="periodic_snapshotter" />
  
<!-- optionally launch rviz and parameter reconfigure -->
<group if="$(arg show_rviz)">
    <node pkg="rviz" name="rviz" type="rviz" args="-d $(find cone_planner)/rviz/cone_boundary.rviz"/>
    <node pkg="rqt_reconfigure" name="rqt_reconfigure" type="rqt_reconfigure" />
</group> 

<!--   <node pkg="rosbag" type="play" name="player_odom" output="screen" args="-clock /home/ignat/EUFSA/datasets/2018-06-13-17-55-42.bag"/> -->


</launch>
